// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())

  ingresos  Ingreso[]
  egresos   Egreso[]
  compras   Compra[]
  ventas    Venta[]
  servicios Servicio[]
  clientes  Cliente[]

  role     String     @default("user")
  Producto Producto[]
}

model Cliente {
  id        String  @id @default(cuid())
  userId    String
  user      User    @relation(fields: [userId], references: [id])
  nombre    String
  telefono  String?
  email     String?
  direccion String?

  ventas Venta[]

  createdAt DateTime @default(now())
}

model Ingreso {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  fecha       DateTime
  monto       Float
  descripcion String?

  createdAt DateTime @default(now())
}

model Egreso {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  fecha       DateTime
  monto       Float
  categoria   String
  descripcion String?

  createdAt DateTime @default(now())
}

model Producto {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  nombre      String
  descripcion String?
  precio      Float
  cantidad    Int
  activo      Boolean  @default(true)
  createdAt   DateTime @default(now())
}

model Compra {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  fecha       DateTime
  proveedor   String?
  monto       Float
  descripcion String?

  createdAt DateTime @default(now())
}

model Venta {
  id        String          @id @default(cuid())
  userId    String
  user      User            @relation(fields: [userId], references: [id])
  clienteId String?
  cliente   Cliente?        @relation(fields: [clienteId], references: [id])
  fecha     DateTime
  monto     Float
  servicios VentaServicio[]

  createdAt DateTime @default(now())
}

model Servicio {
  id          String  @id @default(cuid())
  userId      String
  user        User    @relation(fields: [userId], references: [id])
  nombre      String
  descripcion String?
  precioBase  Float?

  ventas    VentaServicio[]
  createdAt DateTime        @default(now())
}

model VentaServicio {
  id         String   @id @default(cuid())
  ventaId    String
  venta      Venta    @relation(fields: [ventaId], references: [id])
  servicioId String
  servicio   Servicio @relation(fields: [servicioId], references: [id])
  cantidad   Int      @default(1)
  precio     Float // precio usado en esta venta
}
